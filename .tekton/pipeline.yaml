apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: buildah-from-containerfile
spec:
  params:
  - name: image
    description: The URL of the image to build and push.
  - name: context
    description: The path to the build context.
    default: "."
  workspaces:
  - name: source
  results:
  - name: IMAGE_URL
    description: The URL of the pushed image.
  - name: IMAGE_DIGEST
    description: The digest of the pushed image.
  steps:
  - name: build-and-push
    image: quay.io/buildah/stable:v1.33
    workingDir: $(workspaces.source.path)
    script: |
      buildah bud \
        -t "$(params.image)" \
        -f "$(params.context)/Dockerfile" "$(params.context)"
      
      buildah push \
        --digestfile "$(results.IMAGE_DIGEST.path)" \
        "$(params.image)" \
        "docker://$(params.image)"
      
      echo -n "$(params.image)" | tee "$(results.IMAGE_URL.path)"
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: generate-spec-file
spec:
  description: >-
    This task runs a preparation script inside a custom tool image
    to generate a final .spec file.
  params:
  - name: TOOL_IMAGE
    description: The URL of the tool image to use (e.g., the one with skopeo).
  - name: PATH_CONTEXT
    description: The path to the working directory.
    default: "."
  workspaces:
  - name: source
    description: A workspace containing the source code.
  steps:
  - name: generate-spec
    image: $(params.TOOL_IMAGE)
    workingDir: $(workspaces.source.path)/$(params.PATH_CONTEXT)
    script: |
      #!/usr/bin/env bash
      set -euxo pipefail
      
      # This runs the script from your repository to generate the .spec file
      /workspace/pre-build-script.sh
      
      echo "SUCCESS: microshift-gitops.spec file generated."
---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: custom-rpm-build-pipeline
spec:
  params:
  - name: git-url
  - name: revision
  - name: tool-image-url
  - name: path-context
    default: "."
  workspaces:
  - name: source
  - name: git-auth
  tasks:
  # Task 1: Clone the repository
  - name: fetch-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: source
    - name: basic-auth
      workspace: git-auth
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.revision)
  
  # Task 2: Build your tool image with skopeo and other tools
  - name: build-tool-image
    runAfter: [fetch-repository]
    taskRef:
      name: buildah-from-containerfile
    workspaces:
    - name: source
      workspace: source
    params:
    - name: image
      value: $(params.tool-image-url)
    - name: context
      value: $(params.path-context)
  
  # Task 3: Generate the .spec file using the tool image
  - name: generate-spec
    runAfter: [build-tool-image]
    taskRef:
      name: generate-spec-file
    workspaces:
    - name: source
      workspace: source
    params:
    - name: TOOL_IMAGE
      value: $(tasks.build-tool-image.results.IMAGE_URL)
    - name: PATH_CONTEXT
      value: $(params.path-context)
  